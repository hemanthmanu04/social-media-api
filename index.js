import express from "express";
const app = express();
import mongoose from "mongoose";
import helmet from "helmet";
import dotenv from "dotenv";
import morgan from "morgan";
import userRoute from "./routes/users.js";
import authRoute from "./routes/auth.js";
import postRoute from "./routes/posts.js";
import multer from "multer";
import path from "path";
import { fileURLToPath } from "url";
import { dirname } from "path";

dotenv.config();

mongoose
  .connect(process.env.MONGODB_URI)
  .then(() => {
    console.log("Connected to MongoDB");
    app.listen(9900, () => {
      console.log(`App listening to port :9900`);
    });
  })
  .catch((error) => {
    console.log(error);
  });
const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);
console.log("__dirname:", __dirname); // Add this line to check the value of __dirname

app.use("/images", express.static(path.join(__dirname, "public/images")));

//middleware

app.use(express.json());
app.use(helmet());
app.use(morgan("common"));

app.get("/", (req, res) => {
  res.send("Welcome to homepage!");
});

const storage = multer.diskStorage({
  destination: (req, file, cb) => {
    cb(null, "public/images");
  },
  filename: (req, file, cb) => {
    // Generate a unique filename for the uploaded file
    cb(null, file.originalname);
  },
});

const upload = multer({
  storage: storage,
  // Add the below line to parse form fields
  preservePath: true,
});

app.post("/api/upload", upload.single("file"), (req, res) => {
  try {
    // Access the filename generated by multer
    const fileName = req.file.filename;
    return res.status(200).json({ fileName: fileName }); // Return the filename if needed
  } catch (error) {
    console.log(error);
    return res.status(500).json({ error: "Internal Server Error" });
  }
});

app.use("/api/users", userRoute);
app.use("/api/auth", authRoute);
app.use("/api/posts", postRoute);
// app.get("/users", (req, res) => {
//   res.send("Welcome to users page!");
// });
